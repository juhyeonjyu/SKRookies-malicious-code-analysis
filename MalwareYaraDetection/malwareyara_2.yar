import "pe"

rule Detect_Custom_Malware_PE_Final
{
    meta:
        author = "Gemini"
	title = "test"
        desc = "Detects a PE with 2 or more suspicious characteristics."
        date = "2025-09-01"

    strings:
        $b64_url = "aHR0cDovL21hbGljaW91cy5leGFtcGxlLmNvbS9wYXlsb2Fk" ascii
        $b64_reg = "SEtFWV9MT0NBTF9NQUNISU5FXFxTb2Z0d2FyZVxcTWljcm9zb2Z0XFxXaW5kb3dzXFxDdXJyZW50VmVyc2lvblxcUnVu" ascii
        $b64_cmd = "Y21kLmV4ZSAvaSAvYyBwb3dlcnNoZWxsIC1lbmMge30=" ascii
        $xor_code = { 3B 3B 3B 68 }
        $avm_code = { 66 48 C7 C2 56 58 00 00 66 ED }

    condition:
        uint16(0) == 0x5A4D and pe.is_pe and
        (
            // 4가지 조건 중 2개 이상이 참이 되는 모든 경우의 수를 검사
            
            // API + 다른 조건 조합
            (pe.imports("kernel32.dll", "CreateRemoteThread") or pe.imports("kernel32.dll", "VirtualAlloc")) and (any of ($b64*)) or
            (pe.imports("kernel32.dll", "CreateRemoteThread") or pe.imports("kernel32.dll", "VirtualAlloc")) and (pe.section_index(".packed") >= 0 and #xor_code > 0) or
            (pe.imports("kernel32.dll", "CreateRemoteThread") or pe.imports("kernel32.dll", "VirtualAlloc")) and (pe.section_index(".antivm") >= 0 and #avm_code > 0) or
            
            // 문자열 + 다른 조건 조합
            (any of ($b64*)) and (pe.section_index(".packed") >= 0 and #xor_code > 0) or
            (any of ($b64*)) and (pe.section_index(".antivm") >= 0 and #avm_code > 0) or

            // 섹션끼리 조합
            (pe.section_index(".packed") >= 0 and #xor_code > 0) and (pe.section_index(".antivm") >= 0 and #avm_code > 0)
        )
}